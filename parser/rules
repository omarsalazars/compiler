MAIN -> main{ DECLARATIONS STATEMENTS }

DECLARATIONS -> DECLARATION DECLARATIONS | E

DECLARATION -> type VARS;

VARS -> id VARS'
VARS' -> , VARS | E

type -> int | real | boolean

STATEMENTS -> STATEMENT STATEMENTS | E

STATEMENT -> 
	IF_STMT |
	WHILE_STMT |
	READ_STMT |
	PRINT_STMT |
	BLOCK_STMT |
	ASSIGN_STMT


IF_STMT -> if (BOOLEAN_EXPRESSION) BLOCK_STMT ELSE_STMT | E
ELSE_STMT -> else CONDITIONAL_STATEMENT | E
CONDITIONAL_STATEMENT -> IF_STMT | BLOCK_STMT | E

WHILE_STMT -> while(BOOLEAN_EXPRESSION) BLOCK_STMT

read_stmt -> read id;

print_stmt -> print RELATIONAL_EXPRESSION;

BLOCK_STMT -> { STATEMENTS }

ASSIGN_STMT -> id = EXPRESSION;

RELATIONAL_EXPRESSION -> EXPRESSION RELATIONAL_EXPRESSION'
RELATIONAL_EXPRESSION' -> RELOP EXPRESSION | E

relop -> > | < | >= | <= | == | !=

EXPRESSION -> TERM EXPRESSIONX
EXPRESSIONX -> ADDOP TERM | E
TERM -> FACTOR TERMX
TERMX -> MULOP FACTOR | E
FACTOR -> id | number | (EXPRESSION)

addop -> + | -
mulop -> * | / | %
